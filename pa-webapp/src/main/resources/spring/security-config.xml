<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <security:debug /> -->

	<security:http use-expressions="true">
		<security:form-login login-page="/login"
			authentication-failure-url="/login?login_error=true" />
		<security:intercept-url pattern="/datasets/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/registries/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/user/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/preservation/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:logout logout-url="/logout" />
		<security:headers />
	</security:http>

	<bean id="jdbcUserDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="authoritiesByUsernameQuery"
			value="select u.username, role as authority from users u inner join user_role ur on u.username = ur.username where u.username = ?" />
	</bean>

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="jdbcUserDetailsService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
</beans>
